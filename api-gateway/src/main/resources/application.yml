server:
  port: 4004

spring:
  cloud:
    gateway:
      routes:
        # --- IMPORTANT: Order matters here! More specific rules should come first. ---

        # Route for AUTH service's public login endpoint (DO NOT apply JwtValidation)
        - id: auth-service-login-route
          uri: http://auth-service:4005
          predicates:
            - Path=/auth/login
          filters:
            # Remove '/auth' prefix before forwarding to Auth Service
            - StripPrefix=1

        # Route for AUTH service's public register endpoint (DO NOT apply JwtValidation)
        - id: auth-service-register-route
          uri: http://auth-service:4005
          predicates:
            - Path=/auth/register
          filters:
            # Remove '/auth' prefix
            - StripPrefix=1

        # Routes for API documentation (generally public, no JwtValidation needed)
        - id: api-docs-patient-route
          uri: http://patient-service:4000
          predicates:
            - Path=/api-docs/patients
          filters:
            - RewritePath=/api-docs/patients,/v3/api-docs

        - id: api-docs-auth-route
          uri: http://auth-service:4005
          predicates:
            - Path=/api-docs/auth
          filters:
            - RewritePath=/api-docs/auth,/v3/api-docs

        - id: api-docs-appointment-route
          uri: http://appointment-service:7000
          predicates:
            # Corrected: Path to match Swagger UI
            - Path=/api-docs/appointments
          filters:
            # Corrected: Rewrite path
            - RewritePath=/api-docs/appointments,/v3/api-docs

        - id: api-docs-doctor-route
          uri: http://doctor-service:8081
          predicates:
            # Corrected: Path to match Swagger UI
            - Path=/api-docs/doctor
          filters:
            - RewritePath=/api-docs/doctor,/v3/api-docs

        # General route for AUTH service's PROTECTED endpoints (APPLY JwtValidation)
        # This must come AFTER login/register routes.
        - id: auth-service-protected-route
          uri: http://auth-service:4005
          predicates:
            # This will catch all /auth/* requests not handled by more specific rules above
            - Path=/auth/** filters:
            - StripPrefix=1
            # Apply your JWT validation filter here
            - JwtValidation

        # Route for Patient Service endpoints (APPLY JwtValidation)
        - id: api-gateway-patient-route
          uri: http://patient-service:4000
          predicates:
            - Path=/api/patients/**
          filters:
            - StripPrefix=1
            - JwtValidation

        # Route for Appointment Service endpoints (APPLY JwtValidation)
        - id: api-gateway-appointment-route
          uri: http://appointment-service:7000
          predicates:
            - Path=/api/appointments/**
          filters:
            - StripPrefix=1
            - JwtValidation

        # Route for Doctor Service endpoints (APPLY JwtValidation)
        - id: api-gateway-doctor-route
          uri: http://doctor-service:8081
          predicates:
            - Path=/api/doctors/**
          filters:
            - StripPrefix=1
            - JwtValidation

auth:
  service:
    # Ensure this matches your Auth Service's host and port
    url: http://auth-service:4005

---

# NEW CONFIGURATION FOR SWAGGER UI
springdoc:
  swagger-ui:
    # Ensure Swagger UI is enabled
    enabled: true
    urls:
      - name: Auth Service
        # This is the path your Gateway exposes for Auth Service docs
        url: /api-docs/auth
      - name: Patient Service
        # This is the path your Gateway exposes for Patient Service docs
        url: /api-docs/patients
      - name: Appointment Service
        # This is the path your Gateway exposes for Appointment Service docs
        url: /api-docs/appointments
      - name: Doctor Service
        # This is the path your Gateway exposes for Doctor Service docs
        url: /api-docs/doctor