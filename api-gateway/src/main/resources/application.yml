# api-gateway/src/main/resources/application.yml
server:
  port: 4004

spring:
  cloud:
    gateway:
      routes:
        # --- IMPORTANT: Order matters here! More specific rules should come first. ---

        # 1. Route for AUTH service's public login endpoint (DO NOT apply JwtValidation)
        - id: auth-service-login-route
          uri: http://auth-service:4005
          predicates:
            - Path=/auth/login
          filters:
            - StripPrefix=1 # Remove '/auth' prefix before forwarding to Auth Service

        # 2. Route for AUTH service's public register endpoint (DO NOT apply JwtValidation)
        - id: auth-service-register-route
          uri: http://auth-service:4005
          predicates:
            - Path=/auth/register
          filters:
            - StripPrefix=1 # Remove '/auth' prefix

        # 3. Routes for API documentation (generally public, no JwtValidation needed)
        - id: api-docs-patient-route
          uri: http://patient-service:4000
          predicates:
            - Path=/api-docs/patients
          filters:
            - RewritePath=/api-docs/patients,/v3/api-docs

        - id: api-docs-auth-route
          uri: http://auth-service:4005
          predicates:
            - Path=/api-docs/auth
          filters:
            - RewritePath=/api-docs/auth,/v3/api-docs

        # *** CORRECTED SECTION START ***
        - id: api-docs-appointment-route
          uri: http://appointment-service:7000
          predicates:
            - Path=/api-docs/appointments # Corrected: Path to match Swagger UI
          filters:
            - RewritePath=/api-docs/appointments,/v3/api-docs # Corrected: Rewrite path
        # *** CORRECTED SECTION END ***

        - id: api-docs-doctor-route
          uri: http://doctor-service:8081
          predicates:
            - Path=/api-docs/doctor # Corrected: Path to match Swagger UI
          filters:
            - RewritePath=/api-docs/doctor,/v3/api-docs

        # 4. General route for AUTH service's PROTECTED endpoints (APPLY JwtValidation)
        # This must come AFTER login/register routes.
        - id: auth-service-protected-route # Renamed for clarity from 'auth-service-route'
          uri: http://auth-service:4005
          predicates:
            - Path=/auth/** # This will catch all /auth/* requests not handled by more specific rules above
          filters:
            - StripPrefix=1
            - JwtValidation # Apply your JWT validation filter here

        # 5. Route for Patient Service endpoints (APPLY JwtValidation)
        - id: api-gateway-patient-route
          uri: http://patient-service:4000
          predicates:
            - Path=/api/patients/**
          filters:
            - StripPrefix=1
            - JwtValidation

        - id: api-gateway-appointment-route
          uri: http://appointment-service:7000
          predicates:
            - Path=/api/appointments/**
          filters:
            - StripPrefix=1
            - JwtValidation

        - id: api-gateway-doctor-route
          uri: http://doctor-service:8081
          predicates:
            - Path=/api/doctors/**
          filters:
            - StripPrefix=1
            - JwtValidation

auth:
  service:
    url: http://auth-service:4005 # Ensure this matches your Auth Service's host and port

# --- NEW CONFIGURATION FOR SWAGGER UI ---
springdoc:
  swagger-ui:
    enabled: true # Ensure Swagger UI is enabled
    urls:
      - name: Auth Service
        url: /api-docs/auth # This is the path your Gateway exposes for Auth Service docs
      - name: Patient Service
        url: /api-docs/patients # This is the path your Gateway exposes for Patient Service docs
      - name: Appointment Service
        url: /api-docs/appointments # This is the path your Gateway exposes for Appointment Service docs
      - name: Doctor Service
        url: /api-docs/doctor # This is the path your Gateway exposes for Doctor Service docs