version: '3.8'

services:
  #-------------------------------------
  # Infrastructure Services
  #-------------------------------------
  kafka:
    image: bitnami/kafka:latest
    container_name: carebridge-kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://carebridge-kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@carebridge-kafka:9093
    networks:
      - internal

  mailhog:
    image: mailhog/mailhog
    container_name: carebridge-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - internal

  #-------------------------------------
  # Service Databases
  #-------------------------------------
  patient-service-db:
    image: postgres:latest
    container_name: carebridge-patient-db
    ports:
      - "5000:5432"
    volumes:
      - D:/Projects/db_volumes/patient-service-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=admin_user
      - POSTGRES_PASSWORD=password
    networks:
      - internal

  auth-service-db:
    image: postgres:latest
    container_name: carebridge-auth-db
    ports:
      - "5001:5432"
    volumes:
      - D:/Projects/db_volumes/auth-service-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=admin_user
      - POSTGRES_PASSWORD=password
    networks:
      - internal

  appointment-service-db:
    image: postgres:latest
    container_name: carebridge-appointment-db
    ports:
      - "5002:5432"
    volumes:
      - D:/Projects/db_volumes/appointment-service-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=app_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Rous123@.com
    networks:
      - internal

  doctor-service-db:
    image: postgres:latest
    container_name: carebridge-doctor-db
    ports:
      - "5003:5432"
    volumes:
      - D:/Projects/db_volumes/doctor-service-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=doc_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Rous123@.com
    networks:
      - internal

  #-------------------------------------
  # Application Microservices
  #-------------------------------------
  auth-service:
    build: ./auth-service
    container_name: carebridge-auth-service # <- RENAMED
    ports:
      - "4005:4005"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://carebridge-auth-db:5432/db
      - SPRING_DATASOURCE_USERNAME=admin_user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_SQL_INIT_MODE=always
    depends_on:
      - auth-service-db
    networks:
      - internal

  patient-service:
    build: ./patient-service
    container_name: carebridge-patient-service # <- RENAMED
    ports:
      - "4000:4000"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://carebridge-patient-db:5432/db
      - SPRING_DATASOURCE_USERNAME=admin_user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_SQL_INIT_MODE=always
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=carebridge-kafka:9092
      - BILLING_SERVICE_ADDRESS=billing-service
    depends_on:
      - patient-service-db
      - kafka
    networks:
      - internal

  doctor-service:
    build: ./doctor-service
    container_name: carebridge-doctor-service # <- RENAMED
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://carebridge-doctor-db:5432/doc_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Rous123@.com
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create
      - SPRING_SQL_INIT_MODE=always
    depends_on:
      - doctor-service-db
    networks:
      - internal

  appointment-service:
    build: ./appointment-service
    container_name: carebridge-appointment-service # <- RENAMED
    ports:
      - "7000:7000"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://carebridge-appointment-db:5432/app_db
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Rous123@.com
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_SQL_INIT_MODE=always
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=carebridge-kafka:9092
    depends_on:
      - appointment-service-db
      - kafka
    networks:
      - internal

  billing-service:
    build: ./billing-service
    container_name: carebridge-billing-service # <- RENAMED
    ports:
      - "4001:4001"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://carebridge-patient-db:5432/db
      - SPRING_DATASOURCE_USERNAME=admin_user
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_SQL_INIT_MODE=always
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=carebridge-kafka:9092
    depends_on:
      - patient-service-db
      - kafka
    networks:
      - internal

  notification-service:
    build: ./notification-service
    container_name: carebridge-notification-service # <- RENAMED
    ports:
      - "7007:7007"
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=carebridge-kafka:9092
      - SPRING_MAIL_HOST=carebridge-mailhog
      - SPRING_MAIL_PORT=1025
    depends_on:
      - kafka
      - mailhog
    networks:
      - internal

  api-gateway:
    build: ./api-gateway
    container_name: carebridge-api-gateway # <- RENAMED
    ports:
      - "4004:4004"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:4005
    depends_on:
      - auth-service
      - patient-service
      - doctor-service
      - appointment-service
      - billing-service
    networks:
      - internal

#-------------------------------------
# Networks and Volumes
#-------------------------------------
networks:
  internal:
    driver: bridge

#
#  Your Goal	Command	When to Use
#  Run with new code changes	docker-compose up --build -d	After you've edited your project files.
#  Start the application	docker-compose up -d	When no code has changed, and you just want to run it.
#  Stop the application	docker-compose down	When you're finished and want a clean shutdown.