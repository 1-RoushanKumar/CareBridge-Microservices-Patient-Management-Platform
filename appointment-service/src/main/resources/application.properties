# appointment-service/src/main/resources/application.properties
spring.application.name=appointment-service
server.port=7000

jwt.secret=U1JtT1hDbm12b1d0Zkp4c01pY1Z6b01nSm5pQ0t5VmhQdlV2RnNpWXc4PQ==
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=false
# Kafka Consumer Configuration for Patient Events
spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.group-id=appointment-service-patient-event-group
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.ByteArrayDeserializer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
# Kafka Topic to listen to for patient events (must match patient-service producer's topic)
kafka.topics.patient-created=patient
doctorService.baseUrl=http://doctor-service:8081

# Kafka Producer Configuration
spring.kafka.producer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
kafka.topics.appointment-completed-events=appointment-completed-events
